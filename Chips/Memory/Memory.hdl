// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the computer's memory,
 * including RAM and memory mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: If load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output in the next time step.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    // For Reference
    // 110 0000 0000 0000 = 24576 (Keyboard location)
	// 100 0000 0000 0000 = 16384 (Screen Start location)

    PARTS:

    // Test for Keyboard location
    And(a=address[14], b=address[13], out=keyboardTest);

    // Test for screen location
    Not(in=address[13], out=notKeyboard);
    And(a=address[14], b=notKeyboard,out=screenTest);

    // Test for Mem below in load section

    // Build our load tests
  	And(a=screenTest,b=load,out=loadScreen);

  	Or(a=keyboardTest,b=screenTest,out=testForOtherMem);
  	Not(in=testForOtherMem,out=testForMem);
  	And(a=testForMem,b=load,out=loadMem);

    // All memory provides an out that then gets sorted
    RAM16K(load=loadMem, address=address[0..13],in=in,out=outMem);
    Screen(load=loadScreen, address=address[0..12],in=in,out=outScreen);
    Keyboard(out=outKeys);

    // Tests for what goes out
    Mux16(sel=testForMem,b=outMem,a=false,out=outFirst);
    Mux16(sel=screenTest,a=outFirst,b=outScreen,out=outSecond);
    Mux16(sel=keyboardTest,b=outKeys,a=outSecond,out=out);

}

